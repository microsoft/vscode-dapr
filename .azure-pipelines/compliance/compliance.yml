steps:
- task: securedevelopmentteam.vss-secure-development-tools.build-task-antimalware.AntiMalware@3
  displayName: 'AntiMalware Scanner'
  inputs:
    FileDirPath: '$(Build.SourcesDirectory)'
    EnableServices: true
  condition: in(variables['Build.Reason'], 'Manual', 'Schedule')

- task: securedevelopmentteam.vss-secure-development-tools.build-task-policheck.PoliCheck@1
  displayName: 'Run PoliCheck'
  inputs:
    targetType: F # search files and folders
    optionsUEPATH: '$(Build.SourcesDirectory)/.azure-pipelines/compliance/PoliCheckExclusions.xml'
  continueOnError: true
  condition: in(variables['Build.Reason'], 'Manual', 'Schedule')

- task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
  displayName: 'Run CredScan'
  inputs:
    toolMajorVersion: V2
    suppressionsFile: '$(Build.SourcesDirectory)/.azure-pipelines/compliance/CredScanSuppressions.json'
  continueOnError: true
  condition: in(variables['Build.Reason'], 'Manual', 'Schedule')

- task: securedevelopmentteam.vss-secure-development-tools.build-task-publishsecurityanalysislogs.PublishSecurityAnalysisLogs@2
  displayName: 'Publish Security Analysis Logs'
  condition: in(variables['Build.Reason'], 'Manual', 'Schedule')

- task: securedevelopmentteam.vss-secure-development-tools.build-task-postanalysis.PostAnalysis@1
  displayName: 'Post Analysis'
  inputs:
    AllTools: false
    CredScan: true
    PoliCheck: true
  condition: in(variables['Build.Reason'], 'Manual', 'Schedule')
